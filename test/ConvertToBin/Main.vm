function Main.main 1
  push constant 8001
  push constant 16
  push constant 1
  neg
  call Main.fillMemory 3
  push constant 8000
  call Memory.peek 1
  pop local 0
  push local 0
  call Main.convert 1
function Main.convert 3
  push constant 1
  neg
  pop local 2
  label WHILE_LABEL$1
  push local 2
  not
  if-goto BREAK_LABEL$1
    push local 1
    push constant 1
    add
    pop local 1
    push local 0
    call Main.nextMask 1
    pop local 0
    push local 1
    push constant 16
    gt
    not
    not
    if-goto ELSE_LABEL$2
      push argument 0
      push local 0
      and
      push constant 0
      eq
      not
      not
      if-goto ELSE_LABEL$3
        push constant 8000
        push local 1
        add
        push constant 1
        call Memory.poke 2
      goto IF_LABEL$3
      label ELSE_LABEL$3
        push constant 8000
        push local 1
        add
        push constant 0
        call Memory.poke 2
      label IF_LABEL$3
    goto IF_LABEL$2
    label ELSE_LABEL$2
      push constant 0
      pop local 2
    label IF_LABEL$2
  goto WHILE_LABEL$1
  label BREAK_LABEL$1
function Main.nextMask 0
  push argument 0
  push constant 0
  eq
  not
  if-goto ELSE_LABEL$4
    push constant 1
    return
  goto IF_LABEL$4
  label ELSE_LABEL$4
    push argument 0
    push constant 2
    call Math.multiply 2
    return
  label IF_LABEL$4
function Main.fillMemory 0
  label WHILE_LABEL$5
  push argument 1
  push constant 0
  gt
  not
  if-goto BREAK_LABEL$5
    push argument 0
    push argument 2
    call Memory.poke 2
    push argument 1
    push constant 1
    sub
    pop argument 1
    push argument 0
    push constant 1
    add
    pop argument 0
  goto WHILE_LABEL$5
  label BREAK_LABEL$5
